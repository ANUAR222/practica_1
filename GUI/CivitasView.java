package GUI;


import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author Alejandro Rosales Cantero
 */
public class CivitasView extends javax.swing.JFrame implements Vista{
    
    /**
     * Creates new form CivitasView
     */
    public CivitasView() {
        initComponents();
        this.jLabelRanking.setVisible(false);
       this.jTextAreaRanking.setVisible(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        casillaPanel1 = new GUI.CasillaPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldSigOperacion = new javax.swing.JTextField();
        jLabelRanking = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaRanking = new javax.swing.JTextArea();
        JugadorPanel = new GUI.JugadorPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel1.setText("Juego Civitas");

        casillaPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel2.setText("SIGUIENTE OPERACIÓN:");

        jTextFieldSigOperacion.setEditable(false);
        jTextFieldSigOperacion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        jLabelRanking.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabelRanking.setText("RANKING:");

        jTextAreaRanking.setEditable(false);
        jTextAreaRanking.setColumns(20);
        jTextAreaRanking.setRows(5);
        jTextAreaRanking.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jScrollPane1.setViewportView(jTextAreaRanking);

        JugadorPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(casillaPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldSigOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(JugadorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabelRanking))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(760, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(JugadorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(casillaPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldSigOperacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jLabelRanking)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(471, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private GUI.JugadorPanel JugadorPanel;
    private GUI.CasillaPanel casillaPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelRanking;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaRanking;
    private javax.swing.JTextField jTextFieldSigOperacion;
    // End of variables declaration//GEN-END:variables

    CivitasJuego juego;
    private Scanner in;
    
    public void setJuego(CivitasJuego juego) {
        this.juego = juego;
        setVisible(true);
    }
    
    int leeEntero (int max, String msg1, String msg2) {
        Boolean ok;
        String cadena;
        int numero = -1;
        do {
          System.out.print (msg1);
          cadena = in.nextLine();
          try {  
            numero = Integer.parseInt(cadena);
            ok = true;
          } catch (NumberFormatException e) { // No se ha introducido un entero
            System.out.println (msg2);
            ok = false;  
          }
          if (ok && (numero < 0 || numero >= max)) {
            System.out.println (msg2);
            ok = false;
          }
        } while (!ok);

        return numero;
    }
    
    int menu (String titulo, ArrayList<String> lista) {
    String tab = "  ";
    int opcion;
    System.out.println (titulo);
    for (int i = 0; i < lista.size(); i++) {
      System.out.println (tab+i+"-"+lista.get(i));
    }

    opcion = leeEntero(lista.size(),
                          "\n"+tab+"Elige una opcion: ",
                          tab+"Valor erroneo");
    return opcion;
  }

    @Override
    public void actualiza() {
       this.JugadorPanel.setJugador(juego.getJugadorActual());
       this.casillaPanel1.setCasilla(juego.getCasillaActual());
       mostrarSiguienteOperacion(juego.getSiguienteOperacion());
       
       if(juego.finalDelJuego()){
           this.jLabelRanking.setVisible(true);
           this.jTextAreaRanking.setVisible(true);
           String infoRanking = juego.ranking().toString();
           this.jTextAreaRanking.setText(infoRanking);
           
           repaint();
           revalidate();
       }
       
       repaint();
       revalidate();
    }

    @Override
    public void pausa() {
        int val = JOptionPane.showConfirmDialog(null, "¿Continuar?",
                "Siguiente paso", JOptionPane.YES_NO_CANCEL_OPTION);
        if(val == 1) System.exit(0);
    }

    @Override
    public Respuesta comprar() {
        int opcion = 1-JOptionPane.showConfirmDialog(null, 
                "¿Quieres comprar la calle actual?", "Compra", 
                JOptionPane.YES_NO_CANCEL_OPTION);
        
        if(opcion == 0){
            return Respuesta.NO;
        }
        else{
            return Respuesta.SI;
        }
    }

    @Override
    public OperacionImobiliaria elegirOperacion() {
      GestionarDialog g = new GestionarDialog(this, true);
      g.setVisible(true);
      int opcionOperacion = g.gestionElegida;
      return OperacionImobiliaria.values()[opcionOperacion];
    }

    @Override
    public int elegirPropiedad() {
        PropiedadDialog propiedadD = new PropiedadDialog(this, true, juego.getJugadorActual());
        return propiedadD.getPropiedadElegida();
    }

    public void mostrarSiguienteOperacion(OperacionesJuego operacion) {
        this.jTextFieldSigOperacion.setText(operacion.toString());
        if(juego.getSiguienteOperacion() == OperacionJuego.AVANZAR){
            VistaDado vistaDado = new VistaDado(this);
            vistaDado.setVisible(true);
       }
       
       repaint();
    }

    @Override
    public void mostrarEventos() {
        if(!Diario.getInstance().getEventos().isEmpty()){
            DiarioDialog diarioD = new DiarioDialog(this,true);
        }
    }


    public void mostrarSiguienteOperacion(OperacionesJuego sigPaso) {

    }
}
